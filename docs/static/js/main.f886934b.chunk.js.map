{"version":3,"sources":["components/Input.js","components/Tree.js","App.js","index.js"],"names":["Input","submit","clear","useState","state","setState","className","value","onChange","e","target","id","placeholder","onClick","style","marginLeft","Tree","data","src","App","status","text","res","JSON","parse","error","alert","ReactDOM","render","document","getElementById"],"mappings":"sQAsCeA,MApCf,YAAmC,IAAlBC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,MAAS,EACNC,mBAAS,0GADH,mBACzBC,EADyB,KAClBC,EADkB,KAOhC,OACE,yBAAKC,UAAU,iDACb,8BACEC,MAAOH,EACPI,SAAU,SAAAC,GAAC,OAAIJ,EAASI,EAAEC,OAAOH,QACjCI,GAAG,YACHL,UAAU,WACVM,YAAY,qBAEd,4BACEC,QAAS,kBAAMZ,EAAOG,IACtBE,UAAU,gCAFZ,eAMA,4BACEQ,MAAO,CAAEC,WAAY,QACrBF,QAAS,WACPX,IACAG,EAAS,KAEXC,UAAU,iCANZ,W,sBChBSU,MAJf,YAAyB,IAATC,EAAQ,EAARA,KACd,OAAO,kBAAC,IAAD,CAAWC,IAAKD,KCiCVE,MAjCf,WAAgB,IAAD,EACahB,mBAAS,CAAEI,MAAO,GAAIa,OAAQ,IAD3C,mBACNhB,EADM,KACCC,EADD,KAkBb,OACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAAlB,kBACA,yBAAKA,UAAU,OACb,kBAAC,EAAD,CAAOL,OAnBE,SAAAoB,GACb,IAAIC,EACJ,IACEA,EAAMC,KAAKC,MAAMH,GACjBhB,EAAS,eAAKD,EAAN,CAAaG,MAAOe,EAAKF,OAAQ,KACzC,MAAOK,GACPpB,EAAS,eAAKD,EAAN,CAAagB,OAAQ,KAC7BM,MAAM,wEAYmBxB,MARf,WACZG,EAAS,CAAEE,MAAO,GAAIa,OAAQ,QAS5B,yBAAKd,UAAU,OACb,yBAAKA,UAAU,qCACK,IAAjBF,EAAMgB,QAAgB,kBAAC,EAAD,CAAMH,KAAMb,EAAMG,YC1BnDoB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f886934b.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Input({ submit, clear }) {\r\n  const [state, setState] = useState(`{ \"firstname\":\"Kirill\",\r\n  \"lastname\":\"Tyurin\",\r\n  \"array\": [1,2,3],\r\n  \"age\":20,\r\n  \"prog\": {\"a\":1 }}`);\r\n\r\n  return (\r\n    <div className=\"input-field col l6 m6 s12 offset-l3 offset-m3\">\r\n      <textarea\r\n        value={state}\r\n        onChange={e => setState(e.target.value)}\r\n        id=\"textarea1\"\r\n        className=\"textarea\"\r\n        placeholder=\"{'JSON': 'here'}\"\r\n      ></textarea>\r\n      <button\r\n        onClick={() => submit(state)}\r\n        className=\"btn waves-effect waves-light\"\r\n      >\r\n        Create tree\r\n      </button>\r\n      <button\r\n        style={{ marginLeft: \"1rem\" }}\r\n        onClick={() => {\r\n          clear();\r\n          setState(``);\r\n        }}\r\n        className=\"btn waves-effect red accent-2\"\r\n      >\r\n        Clear\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React, { useState } from \"react\";\r\nimport ReactJson from \"react-json-view\";\r\nimport \"./Tree.css\";\r\n\r\nfunction Tree({ data }) {\r\n  return <ReactJson src={data} />;\r\n}\r\n\r\nexport default Tree;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Input from \"./components/Input\";\nimport Tree from \"./components/Tree\";\n\nfunction App() {\n  const [state, setState] = useState({ value: {}, status: 0 });\n\n  const submit = text => {\n    let res;\n    try {\n      res = JSON.parse(text);\n      setState({ ...state, value: res, status: 1 });\n    } catch (error) {\n      setState({ ...state, status: 0 });\n      alert(\"Невалидный JSON!\");\n    }\n  };\n\n  const clear = () => {\n    setState({ value: {}, status: 0 });\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">JSON Visualize</header>\n      <div className=\"row\">\n        <Input submit={submit} clear={clear} />\n      </div>\n      <div className=\"row\">\n        <div className=\"col l6 m6 s12 offset-l3 offset-m3\">\n          {state.status === 1 && <Tree data={state.value} />}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}